
use v6.d;
use lib 'lib';
use lib 'app';

use models;
use Test;

plan 51;

%*ENV<DISABLE-SQL-LOG> = True;

my User $user;

# build
$user = User.build;
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['at least 4 characters required', 'must be present'];

$user = User.build({});
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['must be present', 'at least 4 characters required'];

$user = User.build({fname => 'x' x 33});
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['only 32 characters allowed'];

$user = User.build({fname => 'Greg', lname => 'Donald'});
nok $user.id;
ok $user.is-valid;

# build && save
$user = User.build;
nok $user.save;
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['at least 4 characters required', 'must be present'];

$user = User.build({});
nok $user.save;
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['must be present', 'at least 4 characters required'];

$user = User.build({fname => 'x' x 33});
nok $user.save;
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['only 32 characters allowed'];

$user = User.build({fname => 'Greg', lname => 'Donald'});
ok $user.save;
ok $user.id != 0;
ok $user.is-valid;

# create
$user = User.create;
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['at least 4 characters required', 'must be present'];

$user = User.create({});
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['must be present', 'at least 4 characters required'];

$user = User.create({fname => 'x' x 33});
nok $user.is-valid;
nok $user.id;
ok $user.errors.fname == ['only 32 characters allowed'];

$user = User.create({fname => 'Greg', lname => 'Donald'});
ok $user.id != 0;
ok $user.is-valid;

# update
$user = User.create({fname => 'Fred', lname => 'Dred'});
ok $user.id != 0;
ok $user.is-valid;

ok $user.update({fname => 'Greg'});
ok $user.is-valid;
ok $user.fname eq 'Greg';

nok $user.update({fname => 'x'});
nok $user.is-valid;
ok $user.errors.fname == ['at least 4 characters required'];

nok $user.update({fname => Nil});
nok $user.is-valid;
ok $user.errors.fname == ['must be present', 'at least 4 characters required'];

nok $user.update({fname => 'x' x 33});
nok $user.is-valid;
ok $user.errors.fname == ['only 32 characters allowed'];
